From cbc3e67073b52741f1b2282214099f6f0bd6c0ac Mon Sep 17 00:00:00 2001
From: Pau Ruiz Safont <pau.safont@citrix.com>
Date: Thu, 21 Jan 2021 09:26:07 +0000
Subject: [PATCH 2/3] tests: add test for valid openssl-generated rsa key

It's d parameter is bigger than e ^ -1 mod LCM (p - 1) (q - 1) which is
licit as long as d and e ^ - 1 are congruent with respect of LCM (p - 1)
(q - 1).

Signed-off-by: Pau Ruiz Safont <pau.safont@citrix.com>

cherry-pick of e112692e7d662ece291d162ccbfd3d08a5d7df89
---
 tests/test_rsa.ml | 16 ++++++++++++++++
 1 file changed, 16 insertions(+)

diff --git a/tests/test_rsa.ml b/tests/test_rsa.ml
index 2e7b940..191b799 100644
--- a/tests/test_rsa.ml
+++ b/tests/test_rsa.ml
@@ -43,6 +43,21 @@ let rsa_priv_of_primes_regression_62 _ =
   | Error _ -> assert_failure "expected ok"
   | Ok priv -> assert_equal ~msg:"d is equal" d priv.Rsa.d
 
+let rsa_priv_of_primes_regression_openssl _ =
+  let e = Z.of_string "65537"
+  and d = Z.of_string "21364966876797335224937981624977347791305770821352826744474497613118281825259093305200082888709328664041494911511266059341542974088052755771514853303591832823929488189866359158215383109671205375680439686889619887327157945061169995481249526193538164572824333945969914914389168250738641676992853978375324165227210205971488866002577771580610214948106221456525289283949750296156474480874426885065689443846254958870114957680850339336866525023540164187023510310849878330359224986984785647477789876024460216392539430087762483228942540109987168856343992537776070047681434965518603440527188618027182112877268689620116969210881"
+  and n = Z.of_string "26003711217261578550621411093788590465379160983527099623976249862031215614567566726273034808107255370042109943463095563849992606559609134476057069066550866318424151608276781565055186325047761889573394045234279585405785949661514281355247375815212099164453968239368389736365243837028903903448365174400765513065279734735815019879815099687407795902081216735845663253559329668423470162638675450802885820025108018425582646833277581392446992199509644421030247759098658756879463797225451870622102492377704722852444790028849818045531971545099489092363404165512101521453346604003075697381546910357245133314194790971809369935729"
+  and p = Z.of_string "167173249562998285344683400251639903569188485523881465771532263785652572249038345452185825418846021360573529483365315302293816993785521941622864243995179759923984427691147261149068664025532174455772795926386901753396733517983474861943826134177458663773607339275619054052496007070211507365125143035209397925137"
+  and q = Z.of_string "155549475081910328806496663071699269060677442531084543754539870945308062234020815068226104598610337898669482436828867339638346797527566740356018599563448611471831039630098224992256888467779107812081557864642282199069694603496263731994138092467683330232979926332910833392744391017831937213832896615543518213217"
+  and dp = Z.of_string "132755002521578387208427344594600716257302676970335642531907550489959907687702391789577781987250291220069407638925560669432220144720901230294648011268216967903380465305980866674430162359351152591303223998548604831679503169353677551841013279935481616452288331251969392085510508445032389174215678839807099891905"
+  and dq = Z.of_string "152169667453904159646778469559422238388806519569028538897642778063026012695267963386624048157997842343979683651561853178299789862671237414352891045879600543621061437719219486685819703226188594826677829613436846951019352886368859676966296527494096180039169354974776267777118591655496269139424576967397677391457"
+  and q' = Z.of_string "71680879219372822058570738508033808601658137476144867031269752035545521971293179931151996149323998570187762489030494773672093398051821155138733159825225031201464935294877263527756698979264488516898115736148932950739809310843167520947847241161602397933518005104012950660916455073023725039529353919943223042903"
+  in
+  match Rsa.priv ~e ~d ~n ~p ~q ~dp ~dq ~q' with
+  | exception _ -> assert_failure "expected ok"
+  | Error _ -> assert_failure "expected ok"
+  | Ok _ -> ()
+
 let rsa_selftest ~bits n =
   "selftest" >:: times ~n @@ fun _ ->
     let msg =
@@ -263,5 +278,6 @@ let suite = [
   "RSA-regression" >::: [
     test_case rsa_priv_of_primes_regression ;
     test_case rsa_priv_of_primes_regression_62 ;
+    test_case rsa_priv_of_primes_regression_openssl ;
   ] ;
 ]
-- 
2.29.2

